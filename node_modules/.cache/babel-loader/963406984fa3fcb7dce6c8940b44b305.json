{"ast":null,"code":"var _jsxFileName = \"/home/aditya/compiler/compiler/cchat/src/component/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { user } from \"./Join\";\nimport socketIo from \"socket.io-client\";\nimport \"./Chat.css\";\nimport Message from \"./Message\"; // import sendLogo from \"../../images/send.png\";\n// import Message from \"../Message/Message\";\n// import ReactScrollToBottom from \"react-scroll-to-bottom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst ENDPOINT = \"https://demo-cchat.herokuapp.com/\";\n\nconst Chat = () => {\n  _s();\n\n  const [id, setid] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const send = () => {\n    const message = document.getElementById(\"chatInput\").value;\n    socket.emit(\"message\", {\n      message,\n      id\n    });\n    document.getElementById(\"chatInput\").value = \"\";\n  };\n\n  console.log(messages);\n  useEffect(() => {\n    socket = socketIo(ENDPOINT, {\n      transports: [\"websocket\"]\n    });\n    socket.on(\"connect\", () => {\n      alert(\"Connected\");\n      setid(socket.id);\n    });\n    console.log(socket);\n    socket.emit(\"joined\", {\n      user\n    });\n    socket.on(\"welcome\", data => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message);\n    });\n    socket.on(\"userJoined\", data => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message);\n    });\n    socket.on(\"leave\", data => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message);\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    socket.on(\"sendMessage\", data => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message, data.id);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"C CHAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactScrollToBottom, {\n        className: \"chatBox\",\n        children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n          user: item.id === id ? \"\" : item.user,\n          message: item.message,\n          classs: item.id === id ? \"right\" : \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onKeyPress: event => event.key === \"Enter\" ? send() : null,\n          type: \"text\",\n          id: \"chatInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: send,\n          className: \"sendBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"F0dP33fxYENiSt2syg7U6jzaii4=\");\n\n_c = Chat;\nexport default Chat; // import React, { useEffect, useState } from \"react\";\n// import { user } from \"./join\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import socketio from \"socket.io-client\";\n// import \"./chat.css\";\n// import { IoMdSend } from \"react-icons/io\";\n// const ENDPOINT = \"http://localhost:4500/\";\n// let socket;\n// function Chat() {\n//   const [id, setid] = useState(\"\");\n//   const send = () => {\n//     const socket = socketio(ENDPOINT, { transports: [\"websocket\"] });\n//     const message = document.getElementById(\"chatInput\").value;\n//     socket.emit(\"message\", { message, id }); //emit means to send data to server\n//     document.getElementById(\"chatInput\").value = \"\";\n//   };\n//   useEffect(() => {\n//     const socket = socketio(ENDPOINT, { transports: [\"websocket\"] });\n//     socket.on(\"connect\", () => {\n//       toast.dark(\"Server Connected!\");\n//       setid(socket.id);\n//     });\n//     socket.emit(\"joined\", { user: user });\n//     socket.on(\"Welcome\", (data) => {\n//       console.log(data.user, data.message);\n//       toast.success(`${data.message}`);\n//     });\n//     socket.on(\"userjoined\", (data) => {\n//       console.log(data.user, data.message);\n//       toast.success(`${data.message}`);\n//     });\n//     socket.on(\"leave\", (data) => {\n//       console.log(data.user, data.message);\n//     });\n//     return () => {\n//       socket.emit(\"discon\");\n//       socket.off();\n//     };\n//   }, []);\n//   useEffect(() => {\n//     const socket = socketio(ENDPOINT, { transports: [\"websocket\"] });\n//     socket.on(\"sendMessage\", (data) => {\n//       console.log(data.user);\n//     });\n//   }, []);\n//   return (\n//     <div>\n//       <div className=\"chatPage\">\n//         <div className=\"chatContainer\">\n//           <div className=\"header\"></div>\n//           <div className=\"chatBox\"></div>\n//           <div className=\"inputBox\">\n//             <input type=\"text\" id=\"chatInput\" />\n//             <button onClick={send} className=\"sendBtn\">\n//               <IoMdSend size={40} />\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n// export default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/aditya/compiler/compiler/cchat/src/component/Chat.js"],"names":["React","useEffect","useState","user","socketIo","Message","socket","ENDPOINT","Chat","id","setid","messages","setMessages","send","message","document","getElementById","value","emit","console","log","transports","on","alert","data","off","map","item","i","event","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { user } from \"./Join\";\nimport socketIo from \"socket.io-client\";\nimport \"./Chat.css\";\nimport Message from \"./Message\";\n// import sendLogo from \"../../images/send.png\";\n// import Message from \"../Message/Message\";\n// import ReactScrollToBottom from \"react-scroll-to-bottom\";\n\nlet socket;\n\nconst ENDPOINT = \"https://demo-cchat.herokuapp.com/\";\n\nconst Chat = () => {\n  const [id, setid] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const send = () => {\n    const message = document.getElementById(\"chatInput\").value;\n    socket.emit(\"message\", { message, id });\n    document.getElementById(\"chatInput\").value = \"\";\n  };\n\n  console.log(messages);\n  useEffect(() => {\n    socket = socketIo(ENDPOINT, { transports: [\"websocket\"] });\n\n    socket.on(\"connect\", () => {\n      alert(\"Connected\");\n      setid(socket.id);\n    });\n    console.log(socket);\n    socket.emit(\"joined\", { user });\n    socket.on(\"welcome\", (data) => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message);\n    });\n\n    socket.on(\"userJoined\", (data) => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message);\n    });\n\n    socket.on(\"leave\", (data) => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message);\n    });\n\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"sendMessage\", (data) => {\n      setMessages([...messages, data]);\n      console.log(data.user, data.message, data.id);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n\n  return (\n    <div className=\"chatPage\">\n      <div className=\"chatContainer\">\n        <div className=\"header\">\n          <h2>C CHAT</h2>\n        </div>\n        <ReactScrollToBottom className=\"chatBox\">\n          {messages.map((item, i) => (\n            <Message\n              user={item.id === id ? \"\" : item.user}\n              message={item.message}\n              classs={item.id === id ? \"right\" : \"left\"}\n            />\n          ))}\n        </ReactScrollToBottom>\n        <div className=\"inputBox\">\n          <input\n            onKeyPress={(event) => (event.key === \"Enter\" ? send() : null)}\n            type=\"text\"\n            id=\"chatInput\"\n          />\n          <button onClick={send} className=\"sendBtn\">\n            {/* <img src={sendLogo} alt=\"Send\" /> */}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n\n// import React, { useEffect, useState } from \"react\";\n// import { user } from \"./join\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import socketio from \"socket.io-client\";\n// import \"./chat.css\";\n// import { IoMdSend } from \"react-icons/io\";\n\n// const ENDPOINT = \"http://localhost:4500/\";\n// let socket;\n// function Chat() {\n//   const [id, setid] = useState(\"\");\n\n//   const send = () => {\n//     const socket = socketio(ENDPOINT, { transports: [\"websocket\"] });\n\n//     const message = document.getElementById(\"chatInput\").value;\n//     socket.emit(\"message\", { message, id }); //emit means to send data to server\n//     document.getElementById(\"chatInput\").value = \"\";\n//   };\n\n//   useEffect(() => {\n//     const socket = socketio(ENDPOINT, { transports: [\"websocket\"] });\n\n//     socket.on(\"connect\", () => {\n//       toast.dark(\"Server Connected!\");\n//       setid(socket.id);\n//     });\n\n//     socket.emit(\"joined\", { user: user });\n\n//     socket.on(\"Welcome\", (data) => {\n//       console.log(data.user, data.message);\n//       toast.success(`${data.message}`);\n//     });\n\n//     socket.on(\"userjoined\", (data) => {\n//       console.log(data.user, data.message);\n//       toast.success(`${data.message}`);\n//     });\n\n//     socket.on(\"leave\", (data) => {\n//       console.log(data.user, data.message);\n//     });\n\n//     return () => {\n//       socket.emit(\"discon\");\n//       socket.off();\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     const socket = socketio(ENDPOINT, { transports: [\"websocket\"] });\n\n//     socket.on(\"sendMessage\", (data) => {\n//       console.log(data.user);\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <div className=\"chatPage\">\n//         <div className=\"chatContainer\">\n//           <div className=\"header\"></div>\n//           <div className=\"chatBox\"></div>\n//           <div className=\"inputBox\">\n//             <input type=\"text\" id=\"chatInput\" />\n//             <button onClick={send} className=\"sendBtn\">\n//               <IoMdSend size={40} />\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default Chat;\n"]},"metadata":{},"sourceType":"module"}